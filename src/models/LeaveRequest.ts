import { Schema, model, InferSchemaType, Document } from "mongoose";

/**
 * A LeaveRequest is generated by a student for a particular course schedule instance.
 * It is scoped to the week in which it was created.  The weekRange field stores
 * the start and end date of that calendar week to make querying & cleanup simple.
 */
const LeaveRequestSchema = new Schema(
  {
    student: {
      type: Schema.Types.ObjectId,
      ref: "Student",
      required: true,
    },
    courseSchedule: {
      type: Schema.Types.ObjectId,
      ref: "courseSchedule",
      required: true,
    },
    requestedDay: {
      type: String,
      enum: [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday",
      ],
      required: true,
    },
    reason: {
      type: String,
      required: true,
      trim: true,
    },
    status: {
      type: String,
      enum: ["pending", "accepted", "rejected"],
      default: "pending",
    },
    weekRange: {
      start: { type: Date, required: true },
      end: { type: Date, required: true },
    },
    archived: {
      type: Boolean,
      default: false,
    },
    createdAt: {
      type: Date,
      default: Date.now,
    },
  },
  {
    timestamps: true,
  }
);

export type LeaveRequestType = InferSchemaType<typeof LeaveRequestSchema> &
  Document;

const LeaveRequest = model<LeaveRequestType>(
  "leaveRequest",
  LeaveRequestSchema
);

export default LeaveRequest;
